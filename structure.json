{
  "prueba-salas": {
    "html.html": "<!DOCTYPE html>\r\n<html lang=\"es\">\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n    <title>Crear Sala y Compartir Código</title>\r\n    <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js\"></script>\r\n</head>\r\n<body>\r\n    <h2>Crear una Sala</h2>\r\n    <input type=\"text\" id=\"creador\" placeholder=\"Nombre del creador\">\r\n    <button id=\"btnCrearSala\">Crear Sala</button>\r\n\r\n    <!-- Mostrar el código de la sala generada -->\r\n    <div id=\"salaCreada\" style=\"display:none; margin-top: 20px;\">\r\n        <p>¡Sala creada exitosamente! Comparte este código con otros jugadores:</p>\r\n        <p><strong>Código de la sala: <span id=\"codigoSala\"></span></strong></p>\r\n    </div>\r\n\r\n    <!-- Mostrar la lista de jugadores conectados -->\r\n    <h3>Jugadores Conectados:</h3>\r\n    <div id=\"jugadoresConectados\">\r\n        <ul id=\"listaJugadores\"></ul>\r\n    </div>\r\n\r\n    <script>\r\n        var codigoSala = \"\";  // Variable global para almacenar el código de la sala\r\n\r\n        $('#btnCrearSala').click(function() {\r\n            var creador = $('#creador').val().trim();\r\n            if (creador !== \"\") {\r\n                $.ajax({\r\n                    url: 'php.php',\r\n                    type: 'POST',\r\n                    data: { creador: creador },\r\n                    success: function(response) {\r\n                        console.log(\"Respuesta del servidor:\", response); // Depurar la respuesta del servidor\r\n                        var data = JSON.parse(response);\r\n                        if (data.success) {\r\n                            // Mostrar el código de la sala en la interfaz\r\n                            codigoSala = data.codigo;  // Asignar el código a la variable global\r\n                            $('#codigoSala').text(codigoSala);\r\n                            $('#salaCreada').show();\r\n                            // Comenzar a actualizar jugadores después de crear la sala\r\n                            actualizarJugadores();\r\n                        } else {\r\n                            console.error(\"Error al crear la sala: \" + data.message);\r\n                            alert(\"Error: \" + data.message);\r\n                        }\r\n                    },\r\n                    error: function(xhr, status, error) {\r\n                        console.error(\"Error en la solicitud AJAX:\", error); // Depurar errores de AJAX\r\n                        alert(\"Ocurrió un error al crear la sala. Intenta nuevamente.\");\r\n                    }\r\n                });\r\n            } else {\r\n                alert(\"Por favor, ingresa tu nombre como creador.\");\r\n            }\r\n        });\r\n\r\n        // Actualizar la lista de jugadores conectados\r\n        function actualizarJugadores() {\r\n            if (codigoSala !== \"\") {  // Asegurarse de que el código de sala esté asignado\r\n                $.ajax({\r\n                    url: 'obtener_jugadores.php',\r\n                    type: 'POST',\r\n                    data: { codigo: codigoSala },\r\n                    success: function(response) {\r\n                        console.log(\"Jugadores conectados:\", response); // Depurar la respuesta de jugadores\r\n                        try {\r\n                            var data = JSON.parse(response);\r\n                            if (data.success) {\r\n                                $('#listaJugadores').empty();  // Limpiar la lista de jugadores\r\n                                data.jugadores.forEach(function(jugador) {\r\n                                    $('#listaJugadores').append('<li>' + jugador + '</li>');\r\n                                });\r\n                            } else {\r\n                                $('#listaJugadores').html('<li>No hay jugadores en la sala</li>');\r\n                            }\r\n                        } catch (e) {\r\n                            console.error(\"Error al parsear la respuesta JSON:\", e);\r\n                        }\r\n                    },\r\n                    error: function(xhr, status, error) {\r\n                        console.error(\"Error en la solicitud AJAX:\", error);\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n        // Actualizar la lista de jugadores cada 5 segundos\r\n        setInterval(actualizarJugadores, 5000);\r\n    </script>\r\n</body>\r\n</html>\r\n",
    "obtener_jugadores.php": "<?php\r\n// Conexión a la base de datos\r\n$servername = \"localhost\";\r\n$username = \"root\";\r\n$password = \"\";\r\n$dbname = \"Zombie_plash\";\r\n\r\n$conexion = new mysqli($servername, $username, $password, $dbname);\r\n\r\n// Verificar la conexión\r\nif ($conexion->connect_error) {\r\n    die(\"Conexión fallida: \" . $conexion->connect_error);\r\n}\r\n\r\n// Verificar si el método de la solicitud es POST\r\nif ($_SERVER['REQUEST_METHOD'] === 'POST') {\r\n    $codigo = $_POST['codigo'];  // Obtener el código de la sala desde la solicitud\r\n\r\n    // Consultar la lista de jugadores conectados a la sala\r\n    $sql = \"SELECT nombre FROM jugadores WHERE sala_codigo = '$codigo'\";\r\n    $resultado = $conexion->query($sql);\r\n\r\n    // Verificar si hay jugadores en la sala\r\n    if ($resultado->num_rows > 0) {\r\n        $jugadores = [];\r\n        while ($fila = $resultado->fetch_assoc()) {\r\n            $jugadores[] = $fila['nombre'];  // Almacenar el nombre del jugador\r\n        }\r\n        echo json_encode(['success' => true, 'jugadores' => $jugadores]);\r\n    } else {\r\n        echo json_encode(['success' => false, 'message' => 'No hay jugadores en la sala']);\r\n    }\r\n}\r\n\r\n$conexion->close();  // Cerrar la conexión a la base de datos\r\n?>\r\n",
    "php.php": "<?php\r\n\r\n// Conexión a la base de datos\r\n$conexion = new mysqli(\"localhost\", \"root\", \"\", \"Zombie_plash\");\r\n\r\n// Validar la conexión\r\nif ($conexion->connect_error) {\r\n    die(json_encode(['success' => false, 'message' => 'Error de conexión: ' . $conexion->connect_error]));\r\n}\r\n\r\n// Verificar si el método de la solicitud es POST\r\nif ($_SERVER['REQUEST_METHOD'] === 'POST') {\r\n    $creador = $_POST['creador'];  // Obtener el nombre del creador desde el formulario\r\n\r\n    if (!empty($creador)) {\r\n        // Generar un código único para la sala (6 caracteres)\r\n        $codigo = substr(md5(uniqid(mt_rand(), true)), 0, 6);\r\n\r\n        // Insertar la nueva sala en la base de datos\r\n        $sql = $conexion->prepare(\"INSERT INTO salas (codigo, creador) VALUES (?, ?)\");\r\n        $sql->bind_param(\"ss\", $codigo, $creador);\r\n\r\n        if ($sql->execute()) {\r\n            // Si la sala se creó correctamente, enviar el código generado en formato JSON\r\n            echo json_encode(['success' => true, 'codigo' => $codigo]);\r\n        } else {\r\n            // Enviar mensaje de error si la inserción falla\r\n            echo json_encode(['success' => false, 'message' => 'Error al crear la sala: ' . $sql->error]);\r\n        }\r\n\r\n        $sql->close();\r\n    } else {\r\n        echo json_encode(['success' => false, 'message' => 'El nombre del creador no puede estar vacío.']);\r\n    }\r\n}\r\n\r\n$conexion->close();  // Cerrar la conexión a la base de datos\r\n",
    "unirse.html": "<!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n    <title>Document</title>\r\n    <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js\"></script>\r\n\r\n</head>\r\n<body>\r\n    <h2>Unirse a una Sala</h2>\r\n    <input type=\"text\" id=\"nombreJugador\" placeholder=\"Tu nombre\">\r\n    <input type=\"text\" id=\"codigoUnirse\" placeholder=\"Código de la sala\">\r\n    <button id=\"btnUnirseSala\">Unirse a la Sala</button>\r\n    <div id=\"mensajeUnirse\"></div>\r\n    <script>\r\n        \r\n        // Unirse a una sala con el código\r\n        $('#btnUnirseSala').click(function() {\r\n            var nombreJugador = $('#nombreJugador').val();\r\n            var codigoSala = $('#codigoUnirse').val();\r\n            if (nombreJugador.trim() !== \"\" && codigoSala.trim() !== \"\") {\r\n                $.ajax({\r\n                    url: 'unirse.php',\r\n                    type: 'POST',\r\n                    data: { nombre: nombreJugador, codigo: codigoSala },\r\n                    success: function(response) {\r\n                        var data = JSON.parse(response);\r\n                        if (data.success) {\r\n                            $('#mensajeUnirse').html(\"<p>Te has unido a la sala correctamente.</p>\");\r\n                        } else {\r\n                            $('#mensajeUnirse').html(\"<p>Error: \" + data.message + \"</p>\");\r\n                        }\r\n                    }\r\n                });\r\n            } else {\r\n                alert(\"Por favor completa ambos campos\");\r\n            }\r\n        });\r\n    </script>\r\n</body>\r\n</html>",
    "unirse.php": "<?php\r\n// Conexión a la base de datos\r\n$conexion = new mysqli(\"localhost\", \"root\", \"\", \"Zombie_plash\");\r\n\r\n// Validar la conexión\r\nif ($conexion->connect_error) {\r\n    die(\"Conexión fallida: \" . $conexion->connect_error);\r\n}\r\n\r\nif ($_SERVER['REQUEST_METHOD'] === 'POST') {\r\n    $nombre = $_POST['nombre'];\r\n    $codigo = $_POST['codigo'];\r\n\r\n    // Verificar si la sala existe\r\n    $sql = \"SELECT * FROM salas WHERE codigo = '$codigo'\";\r\n    $resultado = $conexion->query($sql);\r\n\r\n    if ($resultado->num_rows > 0) {\r\n        // Insertar al jugador en la sala\r\n        $sqlInsert = \"INSERT INTO jugadores (nombre, sala_codigo) VALUES ('$nombre', '$codigo')\";\r\n        if ($conexion->query($sqlInsert) === TRUE) {\r\n            echo json_encode(['success' => true]);\r\n        } else {\r\n            echo json_encode(['success' => false, 'message' => 'Error al unirse a la sala']);\r\n        }\r\n    } else {\r\n        echo json_encode(['success' => false, 'message' => 'El código de sala no existe']);\r\n    }\r\n}\r\n\r\n$conexion->close();\r\n?>\r\n",
    "zombie_plash.sql": "-- phpMyAdmin SQL Dump\n-- version 5.2.1\n-- https://www.phpmyadmin.net/\n--\n-- Servidor: 127.0.0.1\n-- Tiempo de generación: 27-09-2024 a las 22:01:29\n-- Versión del servidor: 10.4.32-MariaDB\n-- Versión de PHP: 8.2.12\n\nSET SQL_MODE = \"NO_AUTO_VALUE_ON_ZERO\";\nSTART TRANSACTION;\nSET time_zone = \"+00:00\";\n\n\n/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;\n/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;\n/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;\n/*!40101 SET NAMES utf8mb4 */;\n\n--\n-- Base de datos: `zombie_plash`\n--\n\n-- --------------------------------------------------------\n\n--\n-- Estructura de tabla para la tabla `jugadores`\n--\n\nCREATE TABLE `jugadores` (\n  `id` int(11) NOT NULL,\n  `nombre` varchar(50) NOT NULL,\n  `sala_codigo` varchar(6) NOT NULL\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;\n\n--\n-- Volcado de datos para la tabla `jugadores`\n--\n\nINSERT INTO `jugadores` (`id`, `nombre`, `sala_codigo`) VALUES\n(1, 'pepe', 'a8727d'),\n(2, 'pepe', '6bb0b4'),\n(3, 'paco', '6bb0b4'),\n(4, 'paco', '65ccfe'),\n(5, 'paco', '65ccfe');\n\n-- --------------------------------------------------------\n\n--\n-- Estructura de tabla para la tabla `registro_usuarios`\n--\n\nCREATE TABLE `registro_usuarios` (\n  `id` int(11) NOT NULL,\n  `usuario` varchar(255) NOT NULL,\n  `correo` varchar(255) NOT NULL,\n  `contraseña` varchar(255) NOT NULL\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;\n\n--\n-- Volcado de datos para la tabla `registro_usuarios`\n--\n\nINSERT INTO `registro_usuarios` (`id`, `usuario`, `correo`, `contraseña`) VALUES\n(5, 'bscl', 'bscl20062007@gmail.com', 'Lombana22'),\n(6, 'bsclsss', 'bscl200620@gmail.com', 'Lombana22'),\n(7, 'Algericoffe', 'brayanperdomo0720@gmail.com', 'holi20000'),\n(9, 'Algeri', 'wwww@gmail.co', '@algericoffe'),\n(10, 'jhon', 'wwww@gmail.com', '12345678');\n\n-- --------------------------------------------------------\n\n--\n-- Estructura de tabla para la tabla `salas`\n--\n\nCREATE TABLE `salas` (\n  `id` int(11) NOT NULL,\n  `codigo` varchar(10) DEFAULT NULL,\n  `creador` varchar(50) DEFAULT NULL,\n  `fecha_creacion` datetime DEFAULT current_timestamp()\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;\n\n--\n-- Volcado de datos para la tabla `salas`\n--\n\nINSERT INTO `salas` (`id`, `codigo`, `creador`, `fecha_creacion`) VALUES\n(43, 'a8727d', 'dd', '2024-09-27 14:51:59'),\n(44, '6bb0b4', 'javi', '2024-09-27 14:57:44'),\n(45, '65ccfe', 'javi', '2024-09-27 14:59:32');\n\n--\n-- Índices para tablas volcadas\n--\n\n--\n-- Indices de la tabla `jugadores`\n--\nALTER TABLE `jugadores`\n  ADD PRIMARY KEY (`id`),\n  ADD KEY `sala_codigo` (`sala_codigo`);\n\n--\n-- Indices de la tabla `registro_usuarios`\n--\nALTER TABLE `registro_usuarios`\n  ADD PRIMARY KEY (`id`);\n\n--\n-- Indices de la tabla `salas`\n--\nALTER TABLE `salas`\n  ADD PRIMARY KEY (`id`),\n  ADD UNIQUE KEY `codigo` (`codigo`);\n\n--\n-- AUTO_INCREMENT de las tablas volcadas\n--\n\n--\n-- AUTO_INCREMENT de la tabla `jugadores`\n--\nALTER TABLE `jugadores`\n  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=6;\n\n--\n-- AUTO_INCREMENT de la tabla `registro_usuarios`\n--\nALTER TABLE `registro_usuarios`\n  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=11;\n\n--\n-- AUTO_INCREMENT de la tabla `salas`\n--\nALTER TABLE `salas`\n  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=46;\n\n--\n-- Restricciones para tablas volcadas\n--\n\n--\n-- Filtros para la tabla `jugadores`\n--\nALTER TABLE `jugadores`\n  ADD CONSTRAINT `jugadores_ibfk_1` FOREIGN KEY (`sala_codigo`) REFERENCES `salas` (`codigo`);\nCOMMIT;\n\n/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;\n/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;\n/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;\n"
  }
}